name: Sync Notes to GitHub

on:
  schedule:
    - cron: '*/30 * * * *'  # Runs every 30 minutes

jobs:
  sync_notes:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Git configuration
      - name: Set up Git
        run: |
          git config user.name "onurcangnc"
          git config user.email "onurcan.genc@ug.bilkent.edu.tr"

      # Get the latest Git tag (version) and bump it
      - name: Get latest tag and bump version
        id: version_bump
        run: |
          # Get the latest tag
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          
          # Extract the major, minor, and patch versions
          IFS='.' read -r -a version_parts <<< "${latest_tag//v/}"
          major=${version_parts[0]}
          minor=${version_parts[1]}
          patch=${version_parts[2]}

          # Increment patch version
          patch=$((patch + 1))

          # If patch goes beyond 9, reset it and increment the minor version
          if [ "$patch" -gt 9 ]; then
            patch=0
            minor=$((minor + 1))
          fi

          # Form the new version
          new_version="v${major}.${minor}.${patch}"

          # Output the new version as an environment variable
          echo "::set-output name=version::$new_version"

      # Check if there are any changes to commit using git status --porcelain
      - name: Check for changes
        id: git_status
        run: |
          # Check if there are any changes to commit
          if git status --porcelain | grep .; then
            echo "::set-output name=has_changes::true"
          else
            echo "::set-output name=has_changes::false"
          fi

      # Add, commit, and push changes with the new version number, but only if there are changes
      - name: Commit and push changes
        if: steps.git_status.outputs.has_changes == 'true'
        run: |
          git add .
          git commit -m "Add GitHub Actions workflow to sync notes ${{ steps.version_bump.outputs.version }}"
          git tag ${{ steps.version_bump.outputs.version }}
          git push origin main
          git push origin --tags
